// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCSGGeom_Cell_HeaderFile
#define _McCadCSGGeom_Cell_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_Cell_HeaderFile
#include <Handle_McCadCSGGeom_Cell.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
#ifndef _McCadCSGGeom_DataMapOfIntegerSurface_HeaderFile
#include <McCadCSGGeom_DataMapOfIntegerSurface.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfInteger_HeaderFile
#include <Handle_TColStd_HSequenceOfInteger.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TColStd_HSequenceOfAsciiString;
class TColStd_HSequenceOfInteger;
class McCadCSGGeom_DataMapOfIntegerSurface;
class McCadCSGGeom_DataMapIteratorOfDataMapOfIntegerSurface;
class TCollection_AsciiString;

#include <McCadCSGGeom_MCType.hxx>


//! \brief MC Code independent description of sign-constant geometry

class McCadCSGGeom_Cell : public MMgt_TShared {

public:
 // Methods PUBLIC
 //

//! Creates an infinite plane for use in <br>
//!  CSG representation <br>
//! <br>
Standard_EXPORT McCadCSGGeom_Cell();


Standard_EXPORT McCadCSGGeom_Cell(const Standard_Integer theCNum,const Standard_Integer theMNum,const Standard_Real theDensity);


Standard_EXPORT   void SetCellNumber(const Standard_Integer theCNum) ;


Standard_EXPORT   Standard_Integer GetCellNumber() const;


Standard_EXPORT   void SetMaterialNumber(const Standard_Integer theMNum) ;


Standard_EXPORT   Standard_Integer GetMaterialNumber() const;


Standard_EXPORT   void SetDensity(const Standard_Real theDensity) ;


Standard_EXPORT   Standard_Real GetDensity() const;


Standard_EXPORT   void SetSurface(const McCadCSGGeom_DataMapOfIntegerSurface& theSurfaces) ;


Standard_EXPORT   McCadCSGGeom_DataMapIteratorOfDataMapOfIntegerSurface GetSurface() const;


Standard_EXPORT   void PrintCell(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintSurfaces(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintSurfaceTrsfMat(Standard_OStream& theStream) ;


Standard_EXPORT   void SetCSG(const Handle(TColStd_HSequenceOfAsciiString)& theCSG) ;


Standard_EXPORT   void AppendToCSG(const TCollection_AsciiString& theCSG) ;


Standard_EXPORT   Handle_TColStd_HSequenceOfAsciiString GetCSG() const;


Standard_EXPORT   void SetSurfCounter(const Standard_Integer theSCount) ;


Standard_EXPORT   Standard_Integer GetSurfCounter() const;


Standard_EXPORT   void SetTrsfCounter(const Standard_Integer theTCount) ;


Standard_EXPORT   Standard_Integer GetTrsfCounter() const;


Standard_EXPORT   Standard_Integer GetNbOfSurf() const;


Standard_EXPORT   Standard_Integer GetNbOfSurfTrsf() const;


Standard_EXPORT   void SetComment(const TCollection_AsciiString& theComment) ;


Standard_EXPORT   TCollection_AsciiString GetComment() const;


Standard_EXPORT   void PrintComment(Standard_OStream& theStream) ;


Standard_EXPORT   void SetComplementCells(const Handle(TColStd_HSequenceOfInteger)& theIntSeq) ;


Standard_EXPORT   void SetVoid(const Standard_Boolean& isVoid) ;


Standard_EXPORT   void SetOuterVoid(Standard_Boolean isVoid) ;


Standard_EXPORT   Standard_Boolean IsVoid() ;


Standard_EXPORT   Handle_TColStd_HSequenceOfInteger GetComplementCells() const;
//Standard_EXPORT ~McCadCSGGeom_Cell();

Standard_EXPORT   void SetMCType(const McCadCSGGeom_MCType& theMCType) ;

Standard_EXPORT   McCadCSGGeom_MCType GetMCType() ;


Standard_EXPORT   void SetVolume(const Standard_Real& theVol) ;


Standard_EXPORT   Standard_Real GetVolume() ;


 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //
Standard_Integer myCellNumber;
Standard_Integer myMaterialNumber;
Standard_Real myDensity;
McCadCSGGeom_DataMapOfIntegerSurface mySurfaces;
Standard_Integer mySurfCounter;
Standard_Integer myTrsfCounter;
TCollection_AsciiString myComment;
Handle_TColStd_HSequenceOfInteger myComplementCells;
Standard_Boolean myIsVoid;
Standard_Boolean myIsOuterVoid;
McCadCSGGeom_MCType myMCType;
Standard_Real myVolume;

protected:
Handle_TColStd_HSequenceOfAsciiString myCSG;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
