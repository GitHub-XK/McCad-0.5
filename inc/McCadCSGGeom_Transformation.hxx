// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCSGGeom_Transformation_HeaderFile
#define _McCadCSGGeom_Transformation_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_Transformation_HeaderFile
#include <Handle_McCadCSGGeom_Transformation.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _gp_Trsf_HeaderFile
#include <gp_Trsf.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class gp_Trsf;

//! \brief Class of geometrical transformation


class McCadCSGGeom_Transformation : public MMgt_TShared {

public:
 // Methods PUBLIC
 // 


//!  Defines of a transformation in 3D space: <br>
//!  . Translation, Rotation, Scale <br>
//!  . Symmetry with respect to a point, a line, a plane. <br>
//!  The transformations can be represented as follow : <br>
//! <br>
//!       V1   V2   V3    T       XYZ        XYZ <br>
//!    | a11  a12  a13   a14 |   | x |      | x'| <br>
//!    | a21  a22  a23   a24 |   | y |      | y'| <br>
//!    | a31  a32  a33   a34 |   | z |   =  | z'| <br>
//!    |  0    0    0     1  |   | 1 |      | 1 | <br>//! creation <br>
Standard_EXPORT McCadCSGGeom_Transformation();


Standard_EXPORT McCadCSGGeom_Transformation(const Standard_Real a14,const Standard_Real a24,const Standard_Real a34,const Standard_Real a11,const Standard_Real a12,const Standard_Real a13,const Standard_Real a21,const Standard_Real a22,const Standard_Real a23,const Standard_Real a31,const Standard_Real a32,const Standard_Real a33);


Standard_EXPORT   void SetValues(const Standard_Real a14,const Standard_Real a24,const Standard_Real a34,const Standard_Real a11,const Standard_Real a12,const Standard_Real a13,const Standard_Real a21,const Standard_Real a22,const Standard_Real a23,const Standard_Real a31,const Standard_Real a32,const Standard_Real a33) ;


Standard_EXPORT   void SetVValues(const Standard_Real a14,const Standard_Real a24,const Standard_Real a34) ;


Standard_EXPORT   void SetIdNum(const Standard_Integer theId) ;


Standard_EXPORT   Standard_Integer GetIdNum() const;


Standard_EXPORT   void SetTrsf(const gp_Trsf& theTrsf) ;


Standard_EXPORT   gp_Trsf GetTrsf() const;
//Standard_EXPORT ~McCadCSGGeom_Transformation();




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
Standard_Integer myID;
gp_Trsf myTrsf;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
