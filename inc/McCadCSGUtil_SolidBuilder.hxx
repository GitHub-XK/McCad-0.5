// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCSGUtil_SolidBuilder_HeaderFile
#define _McCadCSGUtil_SolidBuilder_HeaderFile

#ifndef _TopTools_DataMapOfIntegerShape_HeaderFile
#include <TopTools_DataMapOfIntegerShape.hxx>
#endif
#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _Handle_McCadMcRead_Cell_HeaderFile
#include <Handle_McCadMcRead_Cell.hxx>
#endif
#ifndef _McCadCSGBuild_SolidType_HeaderFile
#include <McCadCSGBuild_SolidType.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_Surface_HeaderFile
#include <Handle_McCadCSGGeom_Surface.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TopTools_HSequenceOfShape_HeaderFile
#include <Handle_TopTools_HSequenceOfShape.hxx>
#endif
class McCadMcRead_Cell;
class TopoDS_Shape;
class McCadCSGGeom_Surface;
class TopTools_HSequenceOfShape;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

//! \brief Build a TopoDS_Solid from a CSG description

class McCadCSGUtil_SolidBuilder  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 

//! Creates a postfix CSG expr. from infix MCNP syntax. <br>
//!  uses ExprParser to complete the infix expression <br>
//! <br>
Standard_EXPORT McCadCSGUtil_SolidBuilder();


Standard_EXPORT McCadCSGUtil_SolidBuilder(const Handle(McCadMcRead_Cell)& theCell);


Standard_EXPORT   void Init(const Handle(McCadMcRead_Cell)& theCell) ;


Standard_EXPORT   Standard_Boolean IsDone() const;


Standard_EXPORT   TopoDS_Shape MakeHalfSpace(const Handle(McCadCSGGeom_Surface)& theCSGSurf,const Standard_Integer sNum) ;


Standard_EXPORT   TopoDS_Shape Reverse(const TopoDS_Shape& theShape) ;


Standard_EXPORT   TopoDS_Shape Common(const TopoDS_Shape& theShape1,const TopoDS_Shape& theShape2) ;


Standard_EXPORT   TopoDS_Shape Fuse(const TopoDS_Shape& theShape1,const TopoDS_Shape& theShape2) ;


Standard_EXPORT   Standard_Boolean CheckShape(const TopoDS_Shape& theShape) const;


Standard_EXPORT   Handle_TopTools_HSequenceOfShape HalfSpaces() const;


Standard_EXPORT   TopoDS_Shape Result() const;


Standard_EXPORT   Standard_Integer NbHSolids() const;


Standard_EXPORT   McCadCSGBuild_SolidType ResultType() const;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT   void Done() ;


Standard_EXPORT   void NotDone() ;


Standard_EXPORT   void MakeSolid() ;


 // Fields PRIVATE
 //
TopTools_DataMapOfIntegerShape myHSolidMap;
TopoDS_Shape myShape;
Handle_McCadMcRead_Cell myCell;
McCadCSGBuild_SolidType myType;
Standard_Boolean myIsDone;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
