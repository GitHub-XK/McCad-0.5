// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadDiscDs_DiscSolid_HeaderFile
#define _McCadDiscDs_DiscSolid_HeaderFile

#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _Handle_TColgp_HSequenceOfPnt_HeaderFile
#include <Handle_TColgp_HSequenceOfPnt.hxx>
#endif
#ifndef _Bnd_Box_HeaderFile
#include <Bnd_Box.hxx>
#endif
#ifndef _Handle_McCadDiscDs_HSequenceOfDiscFace_HeaderFile
#include <Handle_McCadDiscDs_HSequenceOfDiscFace.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfInteger_HeaderFile
#include <Handle_TColStd_HSequenceOfInteger.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class TColgp_HSequenceOfPnt;
class McCadDiscDs_HSequenceOfDiscFace;
class TColStd_HSequenceOfInteger;
class TopoDS_Shape;
class TCollection_AsciiString;
class Bnd_Box;
class McCadDiscDs_DiscFace;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

//! \brief Discretized Solid, i.e. bounded by discretized McCadDiscDs_DiscFace s


class McCadDiscDs_DiscSolid  {

public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //

//! discrete face class <br>
//!  Solid with points on it <br>
//! <br>
Standard_EXPORT McCadDiscDs_DiscSolid();


//! <br>
Standard_EXPORT McCadDiscDs_DiscSolid(const TopoDS_Shape& theSolid);


Standard_EXPORT   void SetIndex(const Standard_Integer theIndex) ;


Standard_EXPORT   Standard_Integer GetIndex() const;


Standard_EXPORT   void SetSolid(const TopoDS_Shape& theShape) ;


Standard_EXPORT   TopoDS_Shape GetSolid() const;


Standard_EXPORT   void Init();


Standard_EXPORT   void SetVoxel(const Handle(TColgp_HSequenceOfPnt)& theVoxelSeq) ;


Standard_EXPORT   Handle_TColgp_HSequenceOfPnt GetVoxel() const;


Standard_EXPORT   void SetName(const TCollection_AsciiString& aName) ;


Standard_EXPORT   void SetName(const TCollection_AsciiString& aName,const Standard_Integer i) ;


Standard_EXPORT   TCollection_AsciiString GetName() const;


Standard_EXPORT   TCollection_AsciiString GetComment() const;


Standard_EXPORT   TCollection_AsciiString GetFileName() const;


Standard_EXPORT   void SetBBox(const Bnd_Box& theBBox) ;


Standard_EXPORT   Bnd_Box GetBBox();


Standard_EXPORT   void SetIsDiscret(const Standard_Boolean theState) ;


Standard_EXPORT   Standard_Boolean IsDiscret() const;


Standard_EXPORT   void SetOwnVFaces(const Handle(McCadDiscDs_HSequenceOfDiscFace)& vFaces) ;


Standard_EXPORT   void AppendOwnVFace(const McCadDiscDs_DiscFace& vFace) ;


Standard_EXPORT   Handle_McCadDiscDs_HSequenceOfDiscFace GetOwnVFaces() const;


Standard_EXPORT   Standard_Integer NbOfOwnVFace() const;


Standard_EXPORT   void SetOtherVSolids(const Handle(TColStd_HSequenceOfInteger)& vSolidsIndexList) ;


Standard_EXPORT   void AppendOtherVSolid(Standard_Integer& theIndex) ;


Standard_EXPORT   Handle_TColStd_HSequenceOfInteger GetOtherVSolids() const;


Standard_EXPORT   Standard_Integer NbOfOtherVSolids() const;


Standard_EXPORT   Standard_Integer NbOfPoints() const;


Standard_EXPORT   Standard_Real Volume() const;


Standard_EXPORT   void SetIsVoid(const Standard_Boolean theVoidStatus) ;


Standard_EXPORT   Standard_Boolean IsVoid() const;


Standard_EXPORT   void SetIsOuterVoid(const Standard_Boolean theStatus) ;


Standard_EXPORT   Standard_Boolean IsOuterVoid() const;


Standard_EXPORT   Standard_Boolean HasDensity() const;


Standard_EXPORT   Standard_Boolean HasMaterial() const;


Standard_EXPORT   void UnsetDensity();


Standard_EXPORT   void UnsetMaterial();


Standard_EXPORT   Standard_Real  GetDensity() const;


Standard_EXPORT   Standard_Integer GetMaterialNumber() const;


Standard_EXPORT   void  SetMaterialNumber(const Standard_Integer theMaterialNumber);


Standard_EXPORT   void SetDensity(const Standard_Real theDensity);


protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //


Standard_EXPORT   void MakeOwnVFaces() ;


 // Fields PRIVATE
 //
TCollection_AsciiString myFileName;
TCollection_AsciiString myName;
TCollection_AsciiString myComment;
TopoDS_Shape myShape;
Handle_TColgp_HSequenceOfPnt myVoxelSeq;
Bnd_Box myBBox;
Handle_McCadDiscDs_HSequenceOfDiscFace myOwnVFaces;
Handle_TColStd_HSequenceOfInteger myOtherVSolidsIndexList;
Standard_Integer myIndex;
Standard_Boolean myIsDiscret;
Standard_Boolean myIsVoid;
Standard_Boolean myIsOuterVoid;
Standard_Integer myMaterialNumber;
Standard_Real myDensity;
Standard_Boolean myHaveMaterial;
Standard_Boolean myHaveDensity;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
