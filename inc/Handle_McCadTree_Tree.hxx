// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _Handle_McCadTree_Tree_HeaderFile
#define _Handle_McCadTree_Tree_HeaderFile

#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif
#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif

#ifndef _Handle_MMgt_TShared_HeaderFile
#include <Handle_MMgt_TShared.hxx>
#endif

class Standard_Transient;
class Handle_Standard_Type;
class Handle(MMgt_TShared);
class McCadTree_Tree;
Standard_EXPORT Handle_Standard_Type& STANDARD_TYPE(McCadTree_Tree);

class Handle(McCadTree_Tree) : public Handle(MMgt_TShared) {
  public:
    Handle(McCadTree_Tree)():Handle(MMgt_TShared)() {} 
    Handle(McCadTree_Tree)(const Handle(McCadTree_Tree)& aHandle) : Handle(MMgt_TShared)(aHandle) 
     {
     }

    Handle(McCadTree_Tree)(const McCadTree_Tree* anItem) : Handle(MMgt_TShared)((MMgt_TShared *)anItem) 
     {
     }

    Handle(McCadTree_Tree)& operator=(const Handle(McCadTree_Tree)& aHandle)
     {
      Assign(aHandle.Access());
      return *this;
     }

    Handle(McCadTree_Tree)& operator=(const McCadTree_Tree* anItem)
     {
      Assign((Standard_Transient *)anItem);
      return *this;
     }

    McCadTree_Tree* operator->() const
     {
      return (McCadTree_Tree *)ControlAccess();
     }

//   Standard_EXPORT ~Handle(McCadTree_Tree)();
 
   Standard_EXPORT static const Handle(McCadTree_Tree) DownCast(const Handle(Standard_Transient)& AnObject);
};
#endif
