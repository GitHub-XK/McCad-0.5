// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadTree_Tree_HeaderFile
#define _McCadTree_Tree_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadTree_Tree_HeaderFile
#include <Handle_McCadTree_Tree.hxx>
#endif

#ifndef _McCadTree_TreeNodePtr_HeaderFile
#include <McCadTree_TreeNodePtr.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class McCadTree_BaseIterator;
class McCadTree_PreOrdIterator;
class McCadTree_PostOrdIterator;
class McCadTree_SiblIterator;
class Standard_Transient;



class McCadTree_Tree : public MMgt_TShared {

public:
 // Methods PUBLIC
 // 

//! This class provides  preoder iterator of the N-ary Tree. <br>
Standard_EXPORT McCadTree_Tree();


Standard_EXPORT McCadTree_Tree(const Handle(Standard_Transient)& aNodeData);


Standard_EXPORT McCadTree_Tree(const McCadTree_BaseIterator& aIter);


Standard_EXPORT McCadTree_Tree(const Handle(McCadTree_Tree)& aTree);


Standard_EXPORT   void Equal(const Handle(McCadTree_Tree)& aTree) ;
  void operator=(const Handle(McCadTree_Tree)& aTree) 
{
  Equal(aTree);
}



Standard_EXPORT   McCadTree_PreOrdIterator Begin() const;


Standard_EXPORT   McCadTree_PreOrdIterator End() const;


Standard_EXPORT   McCadTree_PostOrdIterator BeginPost() const;


Standard_EXPORT   McCadTree_PostOrdIterator EndPost() const;


Standard_EXPORT   McCadTree_SiblIterator Begin(const McCadTree_BaseIterator& aIter) const;


Standard_EXPORT   McCadTree_SiblIterator End(const McCadTree_BaseIterator& aIter) const;


Standard_EXPORT   McCadTree_BaseIterator Parent(const McCadTree_BaseIterator& aIter) const;


Standard_EXPORT   McCadTree_SiblIterator PreviousSibling(const McCadTree_BaseIterator& aIter) const;


Standard_EXPORT   McCadTree_SiblIterator NextSibling(const McCadTree_BaseIterator& aIter) const;


Standard_EXPORT   void Clear() ;


Standard_EXPORT   McCadTree_BaseIterator Erase(McCadTree_BaseIterator& aIter) ;


Standard_EXPORT   void EraseChildren(const McCadTree_BaseIterator& aIter) ;


Standard_EXPORT   McCadTree_BaseIterator AppendChild(McCadTree_BaseIterator& aPosition) ;


Standard_EXPORT   McCadTree_BaseIterator AppendChild(McCadTree_BaseIterator& aPosition,const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_BaseIterator AppendChild(McCadTree_BaseIterator& aPosition,const McCadTree_BaseIterator& otherPostion) ;


Standard_EXPORT   McCadTree_BaseIterator AppendChildren(McCadTree_BaseIterator& aPosition,McCadTree_SiblIterator& fromPostion,McCadTree_SiblIterator& toPosition) ;


Standard_EXPORT   McCadTree_PreOrdIterator SetHead(const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_BaseIterator Insert(McCadTree_BaseIterator& aPosition,const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_PreOrdIterator Insert(McCadTree_SiblIterator& aPosition,const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_BaseIterator InsertSubTree(McCadTree_BaseIterator& aPosition,const McCadTree_BaseIterator& aSubtree) ;


Standard_EXPORT   McCadTree_BaseIterator InsertAfter(McCadTree_BaseIterator& aPosition,const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_BaseIterator Replace(McCadTree_BaseIterator& aPosition,const Handle(Standard_Transient)& aNodeData) ;


Standard_EXPORT   McCadTree_BaseIterator Replace(McCadTree_BaseIterator& aPosition,const McCadTree_BaseIterator& fromPosition) ;


Standard_EXPORT   McCadTree_SiblIterator Replace(McCadTree_SiblIterator& aBegin,McCadTree_SiblIterator& anEnd,McCadTree_SiblIterator& aNewBegin,McCadTree_SiblIterator& aNewEnd) ;


Standard_EXPORT   McCadTree_BaseIterator Flatten(McCadTree_BaseIterator& aPosition) ;


Standard_EXPORT   McCadTree_BaseIterator Reparent(McCadTree_BaseIterator& aPosition,McCadTree_SiblIterator& aBegin,McCadTree_SiblIterator& anEnd) ;


Standard_EXPORT   McCadTree_BaseIterator Reparent(McCadTree_BaseIterator& aPosition,McCadTree_BaseIterator& fromPosition) ;


Standard_EXPORT   void Merge(McCadTree_SiblIterator& iter1,McCadTree_SiblIterator& iter2,const McCadTree_SiblIterator& iter3,const McCadTree_SiblIterator& iter4,const Standard_Boolean duplLeaves) ;


Standard_EXPORT   void Sort(McCadTree_SiblIterator& fromPosition,McCadTree_SiblIterator& toPosition,const Standard_Boolean deep) ;


Standard_EXPORT   Standard_Boolean Equal(const McCadTree_BaseIterator& iter1,const McCadTree_BaseIterator& iter2,const McCadTree_BaseIterator& iter3) const;


Standard_EXPORT   Handle_McCadTree_Tree SubTree(const McCadTree_SiblIterator& fromPosition,const McCadTree_SiblIterator& toPosition) ;


Standard_EXPORT   void SubTree(Handle(McCadTree_Tree)& aTree,const McCadTree_SiblIterator& fromPosition,const McCadTree_SiblIterator& toPosition) ;


Standard_EXPORT   void Swap(McCadTree_SiblIterator& aIter) ;


Standard_EXPORT   Standard_Integer Size() const;


Standard_EXPORT   Standard_Integer Depth(McCadTree_BaseIterator& iter) const;


Standard_EXPORT   Standard_Integer NumberOfChlidren(McCadTree_BaseIterator& iter) const;


Standard_EXPORT   Standard_Integer NumberOfSiblings(const McCadTree_BaseIterator& iter) const;


Standard_EXPORT   Standard_Boolean IsInSubTree(const McCadTree_BaseIterator& aPosition,const McCadTree_BaseIterator& aBegin,const McCadTree_BaseIterator& anEnd) const;


Standard_EXPORT   Standard_Boolean IsValid(const McCadTree_BaseIterator& aPosition) const;


Standard_EXPORT   Standard_Integer Index(McCadTree_SiblIterator& iter) const;


Standard_EXPORT   Handle_Standard_Transient Child(McCadTree_BaseIterator& aPosition,Standard_Integer& ind) const;
//Standard_EXPORT ~McCadTree_Tree();


friend class McCadTree_BaseIterator;
friend class McCadTree_PreOrdIterator;
friend class McCadTree_PostOrdIterator;
friend class McCadTree_SiblIterator;


 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //
McCadTree_TreeNodePtr head;


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT   void HeadInit() ;


Standard_EXPORT   void Copy(const Handle(McCadTree_Tree)& other) ;


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
