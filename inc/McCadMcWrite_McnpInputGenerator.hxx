// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadMcWrite_McnpInputGenerator_HeaderFile
#define _McCadMcWrite_McnpInputGenerator_HeaderFile

#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_HSequenceOfCell_HeaderFile
#include <Handle_McCadCSGGeom_HSequenceOfCell.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _McCadCSGGeom_DataMapOfIntegerSurface_HeaderFile
#include <McCadCSGGeom_DataMapOfIntegerSurface.hxx>
#endif
#ifndef _McCadMcWrite_McInputGenerator_HeaderFile
#include <McCadMcWrite_McInputGenerator.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TColStd_HSequenceOfAsciiString;
class McCadCSGGeom_HSequenceOfCell;
class TCollection_AsciiString;
class OSD_File;

#include <McCadMDReader_Reader.hxx>


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


//! \brief Generate MCNP Geometry Description

//! Generates MCNP Geometry Description from a independent McCad internally volume description.

class McCadMcWrite_McnpInputGenerator  : public McCadMcWrite_McInputGenerator {

public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //

//! Mcnp input generator <br>
//!  simple <br>
//! <br>
Standard_EXPORT McCadMcWrite_McnpInputGenerator();


//! <br>
Standard_EXPORT McCadMcWrite_McnpInputGenerator(const Handle(McCadCSGGeom_HSequenceOfCell)& theCellSeq);


Standard_EXPORT   void SetCells(const Handle(McCadCSGGeom_HSequenceOfCell)& theCells) ;


Standard_EXPORT   Handle_McCadCSGGeom_HSequenceOfCell GetCells() const;


Standard_EXPORT   void SetNbOfMatCells(const Standard_Integer theNumber) ;


Standard_EXPORT   Standard_Integer GetNbOfMatCells() const;


Standard_EXPORT   void SetNbOfVoidCells(const Standard_Integer theNumber) ;


Standard_EXPORT   Standard_Integer GetNbOfVoidCells() const;


Standard_EXPORT   void SetNbOfOuterCells(const Standard_Integer theNumber) ;


Standard_EXPORT   Standard_Integer GetNbOfOuterCells() const;


Standard_EXPORT virtual  void MakeHeader() ;


Standard_EXPORT   void AppendToHeader(const TCollection_AsciiString& theText) ;


Standard_EXPORT   void SurfNumbering() ;


Standard_EXPORT virtual  void PrintHeader(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintCell(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintSurface(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintTrsf(Standard_OStream& theStream) ;


Standard_EXPORT virtual  void PrintAll(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintAll(OSD_File& theFile) ;


Standard_EXPORT   void PrintAllCells(Standard_OStream& theStream) ;


Standard_EXPORT   void PrintMaterial(Standard_OStream& theStream) ;


Standard_EXPORT   void SetMDReader(const McCadMDReader_Reader& theMDReader);


Standard_EXPORT   void SetInitialSurfaceNumber(Standard_Integer& theInt);


Standard_EXPORT   void SetInitialCellNumber(Standard_Integer& theInt);


protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //
Handle_TColStd_HSequenceOfAsciiString myHeader;
Handle_McCadCSGGeom_HSequenceOfCell myCellSeq;
Standard_Integer myNbMatCells;
Standard_Integer myNbVoidCells;
Standard_Integer myNbOuterCells;
Standard_Integer myNbTrsfCards;
Standard_Integer myNbSurfCards;
Standard_Boolean myIsHeaded;
Standard_Boolean myIsNumbered;
McCadCSGGeom_DataMapOfIntegerSurface myGlSurfaceMap;
McCadMDReader_Reader myMDReader;
Standard_Integer myInitSurfNb;
Standard_Integer myInitCellNb;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
