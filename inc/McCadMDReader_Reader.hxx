// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadMDReader_Reader_HeaderFile
#define _McCadMDReader_Reader_HeaderFile

#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _McCadMDReader_DataMapOfAsciiStringReal_HeaderFile
#include <McCadMDReader_DataMapOfAsciiStringReal.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class TCollection_AsciiString;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif
#include <MeshVS_DataMapOfIntegerAsciiString.hxx>

#include <TColStd_HSequenceOfInteger.hxx>
#include <TColStd_DataMapOfAsciiStringInteger.hxx>
#include <TDocStd_Document.hxx>

//! \brief Material Density Reader for MCNP

//! Reads a Material Density List and assigns material information to MCNP cells.

class McCadMDReader_Reader  {

public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //


Standard_EXPORT McCadMDReader_Reader() ;


Standard_EXPORT  McCadMDReader_Reader(const Handle_TDocStd_Document& theTDoc) ;


Standard_EXPORT   Standard_Boolean ReadFile(const TCollection_AsciiString& theFileName) ;


Standard_EXPORT   Standard_Real GetDensity(const TCollection_AsciiString& theName) ;


Standard_EXPORT   Standard_Integer GetMaterial(const TCollection_AsciiString& theName) ;


Standard_EXPORT   void SetDensity(const TCollection_AsciiString& theName, const Standard_Real& theDens) ;


Standard_EXPORT   void SetMaterial(const TCollection_AsciiString& theName, const Standard_Integer& theMat) ;


Standard_EXPORT   void SetMCard(const Standard_Integer& theMat, const TCollection_AsciiString& theMCard) ;


Standard_EXPORT   void GetMCard(const Standard_Integer& theMat, TCollection_AsciiString& theMCard) ;


Standard_EXPORT   Standard_Boolean HasMCard() ;


Standard_EXPORT   void ClearMCard() ;


Standard_EXPORT   void ReadTDoc(const Handle_TDocStd_Document& theTDoc) ;


Standard_EXPORT   void Init() ;


Standard_EXPORT   TCollection_AsciiString GetFileName() ;


Standard_EXPORT   Handle_TColStd_HSequenceOfInteger GetMCardNumbers();


protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //

Standard_EXPORT Standard_Integer ExtractMCardNumber(const TCollection_AsciiString& theMCard) ;

 // Fields PRIVATE
 //
TCollection_AsciiString myFileName;
McCadMDReader_DataMapOfAsciiStringReal myDensMap;
TColStd_DataMapOfAsciiStringInteger myMatMap;
MeshVS_DataMapOfIntegerAsciiString myMCardMap;
Standard_Boolean myHasMCard;
Handle_TColStd_HSequenceOfInteger myMCardNumbers;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
