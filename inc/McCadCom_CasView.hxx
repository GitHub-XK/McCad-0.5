// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCom_CasView_HeaderFile
#define _McCadCom_CasView_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadCom_CasView_HeaderFile
#include <Handle_McCadCom_CasView.hxx>
#endif

#ifndef _Handle_V3d_View_HeaderFile
#include <Handle_V3d_View.hxx>
#endif
#ifndef _Handle_McCadTool_TaskMaster_HeaderFile
#include <Handle_McCadTool_TaskMaster.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _McCadCom_View_HeaderFile
#include <McCadCom_View.hxx>
#endif
#ifndef _Handle_McCadCom_CasDocument_HeaderFile
#include <Handle_McCadCom_CasDocument.hxx>
#endif
#ifndef _Handle_Xw_Window_HeaderFile
#include <Handle_Xw_Window.hxx>
#endif
#ifndef _Handle_McCadTool_Task_HeaderFile
#include <Handle_McCadTool_Task.hxx>
#endif
#ifndef _McCadTool_State_HeaderFile
#include <McCadTool_State.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _V3d_TypeOfShadingModel_HeaderFile
#include <V3d_TypeOfShadingModel.hxx>
#endif
#ifndef _V3d_TypeOfVisualization_HeaderFile
#include <V3d_TypeOfVisualization.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Aspect_FormatOfSheetPaper_HeaderFile
#include <Aspect_FormatOfSheetPaper.hxx>
#endif
class V3d_View;
class McCadTool_TaskMaster;
class McCadCom_CasDocument;
class Xw_Window;
class McCadTool_Task;
class QMouseEvent;
class Quantity_Color;


//! base View class <br>
class McCadCom_CasView : public McCadCom_View {

public:
 // Methods PUBLIC
 // 


Standard_EXPORT McCadCom_CasView();


Standard_EXPORT McCadCom_CasView(const Handle(McCadCom_CasDocument)& theDocument = NULL);


Standard_EXPORT virtual  void Init(const Handle(Xw_Window)& theWin) ;


Standard_EXPORT   Standard_Boolean IsInit() const;


Standard_EXPORT virtual  void SetTaskMaster(const Handle(McCadTool_TaskMaster)& theTaskMaster) ;


Standard_EXPORT virtual  Handle_McCadTool_TaskMaster GetTaskMaster() const;


Standard_EXPORT virtual  void SetDefaultTask(const Handle(McCadTool_Task)& theTask) ;


Standard_EXPORT virtual  Handle_McCadTool_Task GetDefaultTask() const;


Standard_EXPORT virtual  void SetCurrentTask(const Handle(McCadTool_Task)& theTask) ;


Standard_EXPORT virtual  Handle_McCadTool_Task GetCurrentTask() const;


Standard_EXPORT virtual  void Execute() ;


Standard_EXPORT virtual  void UnExecute() ;


Standard_EXPORT virtual  void Suspend() ;


Standard_EXPORT virtual  void Resume() ;


Standard_EXPORT virtual  void SetState(const McCadTool_State theState) ;


Standard_EXPORT   McCadTool_State State() const;


Standard_EXPORT virtual  void MousePressEvent(const QMouseEvent& e) ;


Standard_EXPORT virtual  void MouseReleaseEvent(const QMouseEvent& e) ;


Standard_EXPORT   void MouseMoveEvent(const QMouseEvent& e) ;


Standard_EXPORT virtual  void MouseLeaveEvent() ;


Standard_EXPORT virtual  void MouseEnterEvent() ;


Standard_EXPORT virtual  Handle_V3d_View View() const;


Standard_EXPORT   void Redraw() const;


Standard_EXPORT   void Reset() const;


Standard_EXPORT   void FitAll() const;


Standard_EXPORT   void FitAll(const Standard_Integer Xmin,const Standard_Integer Ymin,const Standard_Integer Xmax,const Standard_Integer Ymax) ;


Standard_EXPORT   void Back() const;


Standard_EXPORT   void Front() const;


Standard_EXPORT   void Top() const;


Standard_EXPORT   void Bottom() const;


Standard_EXPORT   void Left() const;


Standard_EXPORT   void Right() const;


Standard_EXPORT   void Iso() const;


Standard_EXPORT   void Pan(const Standard_Integer Dx,const Standard_Integer Dy) ;


Standard_EXPORT   void Rotate(const Standard_Real Ax,const Standard_Real Ay,const Standard_Real Az) ;


Standard_EXPORT   void Rotate(const Standard_Real Ax,const Standard_Real Ay,const Standard_Real Az,const Standard_Integer X,const Standard_Integer Y,const Standard_Integer Z) ;


Standard_EXPORT   void WindowFitAll(const Standard_Integer Xmin,const Standard_Integer Ymin,const Standard_Integer Xmax,const Standard_Integer Ymax) ;


Standard_EXPORT   void Resize() ;


Standard_EXPORT   void Size(Standard_Integer& theWidth,Standard_Integer& theHeight) ;


Standard_EXPORT   void Zoom() ;


Standard_EXPORT   void SetBackgroundColor(const Quantity_Color& theColor) ;


Standard_EXPORT   void SetBackgroundColor(const Standard_Real R,const Standard_Real G,const Standard_Real B) ;


Standard_EXPORT   Quantity_Color BackgroundColor() const;


Standard_EXPORT   void SetShadingModel(const V3d_TypeOfShadingModel Model) ;


Standard_EXPORT   void SetVisualization(const V3d_TypeOfVisualization Mode) ;


Standard_EXPORT   void SetHiddenLineOn() ;


Standard_EXPORT   void SetHiddenLineOff() ;


Standard_EXPORT   void SetAntialiasingOn() ;


Standard_EXPORT   void SetAntialiasingOff() ;


Standard_EXPORT   void Dump(const Standard_CString aFile,const Aspect_FormatOfSheetPaper aFormat) ;


Standard_EXPORT   void SetMinMaxPoints(const Standard_Integer Xmin,const Standard_Integer Ymin,const Standard_Integer Xmax,const Standard_Integer Ymax) ;


Standard_EXPORT   void SetMinPoints(const Standard_Integer Xmin,const Standard_Integer Ymin) ;


Standard_EXPORT   void SetMaxPoints(const Standard_Integer Xmax,const Standard_Integer Ymax) ;


Standard_EXPORT   void GetMinMaxPoints(Standard_Integer& Xmin,Standard_Integer& Ymin,Standard_Integer& Xmax,Standard_Integer& Ymax) ;


Standard_EXPORT   void GetMinPoints(Standard_Integer& Xmin,Standard_Integer& Ymin) ;


Standard_EXPORT   void GetMaxPoints(Standard_Integer& Xmax,Standard_Integer& Ymax) ;
//Standard_EXPORT ~McCadCom_CasView();




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //
Handle_V3d_View myView;
Handle_McCadTool_TaskMaster myTaskMaster;
Standard_Integer myXmin;
Standard_Integer myYmin;
Standard_Integer myXmax;
Standard_Integer myYmax;
Standard_Boolean myIsInitialized;


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
