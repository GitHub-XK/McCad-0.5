// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCSGGeom_GQ_HeaderFile
#define _McCadCSGGeom_GQ_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_GQ_HeaderFile
#include <Handle_McCadCSGGeom_GQ.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Handle_Geom_Surface_HeaderFile
#include <Handle_Geom_Surface.hxx>
#endif
#ifndef _McCadCSGGeom_Surface_HeaderFile
#include <McCadCSGGeom_Surface.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_Surface_HeaderFile
#include <Handle_McCadCSGGeom_Surface.hxx>
#endif
class Geom_Surface;
class gp_Pnt;
class GeomAdaptor_Surface;
class McCadCSGGeom_Surface;

//! \brief General Quadric class of McCad

class McCadCSGGeom_GQ : public McCadCSGGeom_Surface {

public:
 // Methods PUBLIC
 //

//! Creates a generic quadric <br>
//!  CSG representation <br>
//! <br>
//!  Creates a generic quadric from coeficients: <br>
//!  A * X^2 + B * Y^2 + C * Z^2 + <br>
//!  D*xy + E*yz + F*zx + G*x + H*y + I*z + J= 0 <br>

Standard_EXPORT McCadCSGGeom_GQ();

Standard_EXPORT McCadCSGGeom_GQ(const Standard_Real A,const Standard_Real B,const Standard_Real C,const Standard_Real D,const Standard_Real E,const Standard_Real F,const Standard_Real G,const Standard_Real H,const Standard_Real I,const Standard_Real J);


//!  Returns the coefficients of the cartesian equation : <br>
Standard_EXPORT   void Coefficients(Standard_Real& A,Standard_Real& B,Standard_Real& C,Standard_Real& D,Standard_Real& E,Standard_Real& F,Standard_Real& G,Standard_Real& H,Standard_Real& I,Standard_Real& J) const;

//! See McCadCSGGeom_Surface.hxx
Standard_EXPORT virtual  void Print(Standard_OStream& theStream) const;

//! Performs Point evaluation <br>
Standard_EXPORT virtual  Standard_Real Evaluate(const gp_Pnt& thePoint) const;

//!  findes a point on the surface; <br>
Standard_EXPORT virtual  gp_Pnt Value(const Standard_Real U,const Standard_Real V) const;

//! See McCadCSGGeom_Surface.hxx
Standard_EXPORT virtual  void SetCasSurf(const GeomAdaptor_Surface& theSurf) ;

//! returns the Cas surface <br>
Standard_EXPORT virtual  Handle_Geom_Surface CasSurf() const;

//! See McCadCSGGeom_Surface.hxx
Standard_EXPORT virtual  Standard_Boolean IsEqual(const Handle(McCadCSGGeom_Surface)& another) const;

//! See McCadCSGGeom_Surface.hxx
Standard_EXPORT virtual  Standard_Boolean IsGeomEqual(const Handle(McCadCSGGeom_Surface)& another) const;
//Standard_EXPORT ~McCadCSGGeom_GQ();


Standard_EXPORT void MakeSurface( ) ;

 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //
Standard_Integer ComputeMatrixRank(gp_Mat m) ;

 // Fields PRIVATE
 //
Standard_Real myA;
Standard_Real myB;
Standard_Real myC;
Standard_Real myD;
Standard_Real myE;
Standard_Real myF;
Standard_Real myG;
Standard_Real myH;
Standard_Real myI;
Standard_Real myJ;
Handle_Geom_Surface mySurface;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
