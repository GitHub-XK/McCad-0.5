// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadExDllMcnp_Mcnp_HeaderFile
#define _McCadExDllMcnp_Mcnp_HeaderFile

#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _McCadEXPlug_ExchangePlugin_HeaderFile
#include <McCadEXPlug_ExchangePlugin.hxx>
#endif
#ifndef _Handle_TopTools_HSequenceOfShape_HeaderFile
#include <Handle_TopTools_HSequenceOfShape.hxx>
#endif
#ifndef _Handle_McCadDiscDs_HSequenceOfDiscSolid_HeaderFile
#include <Handle_McCadDiscDs_HSequenceOfDiscSolid.hxx>
#endif
#include <QMcCad_VGParamDialog.h>
#include <McCadMDReader_Reader.hxx>

#include <Message_ProgressIndicator.hxx>

class TColStd_HSequenceOfAsciiString;
class TopTools_HSequenceOfShape;
class McCadDiscDs_HSequenceOfDiscSolid;
class TCollection_AsciiString;
#include <McCadCSGGeom_Unit.hxx>
#include <McCadEXPlug_MCBase.hxx>



#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

//! \brief CAD<->MCNP Exchange class

//! This class is the top level class of data exchange between CAD and MCNP geometry.

class McCadExDllMcnp_Mcnp  :/* public McCadEXPlug_ExchangePlugin,*/ public McCadEXPlug_MCBase{


public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //

//! This is Plugin proxy <br>
Standard_EXPORT McCadExDllMcnp_Mcnp();


//! Export a HSequenceOfShape - no naming information
Standard_EXPORT virtual  Standard_Boolean Export(const Handle(TopTools_HSequenceOfShape)& theEntitySequence) ;

//! Export a HSequenceOfDiscSolid. This allows the transport of naming information from CAD to MCNP <br>
Standard_EXPORT virtual  Standard_Boolean Export(const Handle(McCadDiscDs_HSequenceOfDiscSolid)& theVEntitySequence) ;

//! Import MCNP file and translate the MCNP geometry to CAD geometry description.
Standard_EXPORT virtual  Handle_TopTools_HSequenceOfShape Import() ;

//! Return the filename of input/output file
Standard_EXPORT virtual  TCollection_AsciiString GetFilename() const;

//! Define the filename
Standard_EXPORT virtual  void SetFilename(const TCollection_AsciiString& theFileName) ;

//! ??? - no idea. this funnction isn't used
Standard_EXPORT virtual  Standard_Integer GetSize() const;

//! Get File Extensions
Standard_EXPORT virtual  Handle_TColStd_HSequenceOfAsciiString GetExtensions() const;

//! Get main file extension
Standard_EXPORT virtual  TCollection_AsciiString GetExtension() const;

//! Get selected file format
Standard_EXPORT virtual  TCollection_AsciiString GetFormat() const;

//! Returns true, if export is enabled
Standard_EXPORT virtual  Standard_Boolean ExportEnabled() const;

//! returns true, if Import is enabled
Standard_EXPORT virtual  Standard_Boolean ImportEnabled() const;

//! Import a MCNP file to a TDocStd_Document
Standard_EXPORT virtual Standard_Boolean ImportToDocument(Handle(TDocStd_Document)& theDoc);

//! Export CAD geometry from a TDocStd_Document
//! this allows to transport naming and material information
Standard_EXPORT virtual  Standard_Boolean ExportFromDocument(const Handle(TDocStd_Document)& theDoc);

//! enables or disables the Build of Void Cells to Solids in CAD-Model <br>
//Standard_EXPORT   void SetBuildVoids(const Standard_Boolean theStat) ;

//Standard_EXPORT   McCadGUI_ProgressDialogPtr GetProgressDialog();


protected:

 // Methods PROTECTED
 //

	Standard_EXPORT   void run() ;
 // Fields PROTECTED
 //
TCollection_AsciiString myFormat;
Standard_Boolean myExportEnabled;
Standard_Boolean myImportEnabled;
TCollection_AsciiString myFileName;
Standard_Integer mySize;
//Standard_Integer myInitCellNb;
//Standard_Integer myInitSurfNb;


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //
Handle_TColStd_HSequenceOfAsciiString myExtensions;
//Standard_Boolean myBuildVoids;
Handle(TopTools_HSequenceOfShape) myDecomposedModel;
//McCadMDReader_Reader myMDReader;
//McCadCSGGeom_Unit myUnits;
//Handle_Message_ProgressIndicator myPI;
//McCadGUI_ProgressDialogPtr myProgress;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
