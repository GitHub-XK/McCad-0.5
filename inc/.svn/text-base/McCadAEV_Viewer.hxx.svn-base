// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadAEV_Viewer_HeaderFile
#define _McCadAEV_Viewer_HeaderFile

#ifndef _Handle_V3d_Viewer_HeaderFile
#include <Handle_V3d_Viewer.hxx>
#endif
#ifndef _Handle_AIS_InteractiveContext_HeaderFile
#include <Handle_AIS_InteractiveContext.hxx>
#endif
#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_ExtString_HeaderFile
#include <Standard_ExtString.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _V3d_TypeOfOrientation_HeaderFile
#include <V3d_TypeOfOrientation.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class V3d_Viewer;
class AIS_InteractiveContext;
class TCollection_AsciiString;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

//! Viewer class all application must <br>
//!          use this class. <br>
class McCadAEV_Viewer  {

public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //


Standard_EXPORT McCadAEV_Viewer();

//! Deletes t<me>. <br>
Standard_EXPORT virtual  void Destroy() ;
~McCadAEV_Viewer()
{
  Destroy();
}



Standard_EXPORT virtual  void Update() ;


Standard_EXPORT virtual  void Reconfigure() ;


Standard_EXPORT virtual  Handle_AIS_InteractiveContext GetContext() const;


Standard_EXPORT virtual  void SetContext(const Handle(AIS_InteractiveContext)& theContext) ;


Standard_EXPORT virtual  Handle_V3d_Viewer MakeCasViewer(const Standard_CString theDisplay,const Standard_ExtString theName,const Standard_CString theDomain,const Standard_Real theViewSize,const V3d_TypeOfOrientation theViewProj,const Standard_Boolean theCompMode,const Standard_Boolean theDefCompMode) ;


Standard_EXPORT virtual  Handle_V3d_Viewer GetViewer() const;


Standard_EXPORT virtual  void SetViewer(const Handle(V3d_Viewer)& theViewer) ;


Standard_EXPORT virtual  TCollection_AsciiString GetName() const;


Standard_EXPORT virtual  void SetName(const TCollection_AsciiString& theName) ;





protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //
Handle_V3d_Viewer myViewer;
Handle_V3d_Viewer myCollector;
Handle_AIS_InteractiveContext myContext;
TCollection_AsciiString myName;


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
