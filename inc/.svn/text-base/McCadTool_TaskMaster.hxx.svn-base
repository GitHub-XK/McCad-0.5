// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadTool_TaskMaster_HeaderFile
#define _McCadTool_TaskMaster_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadTool_TaskMaster_HeaderFile
#include <Handle_McCadTool_TaskMaster.hxx>
#endif

#ifndef _Handle_McCadCom_CasView_HeaderFile
#include <Handle_McCadCom_CasView.hxx>
#endif
#ifndef _Handle_McCadTool_Task_HeaderFile
#include <Handle_McCadTool_Task.hxx>
#endif
#ifndef _Handle_McCadTool_TaskHistory_HeaderFile
#include <Handle_McCadTool_TaskHistory.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _McCadTool_State_HeaderFile
#include <McCadTool_State.hxx>
#endif
class McCadCom_CasView;
class McCadTool_Task;
class McCadTool_TaskHistory;
class McCadWin_MouseEvent;

#include <QMouseEvent>

//! base Task class <br>
//!   fully implemented this gives a cmd with a finite state machine (FSM) <br>
//!   this is a lazy implementation; see text books for complete cmd with <br>
//!   FSM. <br>
class McCadTool_TaskMaster : public MMgt_TShared {

public:
 // Methods PUBLIC
 // 


Standard_EXPORT McCadTool_TaskMaster();


Standard_EXPORT McCadTool_TaskMaster(const Handle(McCadCom_CasView)& theView);

//! Deletes t<me>. <br>
Standard_EXPORT virtual  void Destroy() ;
~McCadTool_TaskMaster()
{
  Destroy();
}



Standard_EXPORT virtual  void SetView(const Handle(McCadCom_CasView)& theView) ;


Standard_EXPORT virtual  Handle_McCadCom_CasView GetView() const;


Standard_EXPORT virtual  void SetDefaultTask(const Handle(McCadTool_Task)& theTask) ;


Standard_EXPORT virtual  Handle_McCadTool_Task GetDefaultTask() const;


Standard_EXPORT virtual  void SetCurrentTask(const Handle(McCadTool_Task)& theTask) ;


Standard_EXPORT virtual  Handle_McCadTool_Task GetCurrentTask() const;


Standard_EXPORT virtual  void SetTaskHistory(const Handle(McCadTool_TaskHistory)& theTaskHist) ;


Standard_EXPORT   Handle_McCadTool_TaskHistory GetTaskHistory() const;


Standard_EXPORT virtual  void Execute() ;


Standard_EXPORT virtual  void UnExecute() ;


Standard_EXPORT virtual  void Suspend() ;


Standard_EXPORT virtual  void Resume() ;


Standard_EXPORT virtual  void SetState(const McCadTool_State theState) ;


Standard_EXPORT   McCadTool_State State() const;


Standard_EXPORT virtual  void MousePressEvent(const QMouseEvent& e) ;


Standard_EXPORT virtual  void MouseReleaseEvent(const QMouseEvent& e) ;


Standard_EXPORT   void MouseMoveEvent(const QMouseEvent& e) ;


Standard_EXPORT virtual  void MouseLeaveEvent() ;


Standard_EXPORT virtual  void MouseEnterEvent() ;




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //
Handle_McCadCom_CasView myView;
Handle_McCadTool_Task myDefaultTask;
Handle_McCadTool_Task myCurrentTask;
Handle_McCadTool_TaskHistory myTaskHistory;


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
