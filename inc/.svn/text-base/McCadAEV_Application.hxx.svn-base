// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadAEV_Application_HeaderFile
#define _McCadAEV_Application_HeaderFile

#ifndef _OSD_Directory_HeaderFile
#include <OSD_Directory.hxx>
#endif
#ifndef _OSD_Path_HeaderFile
#include <OSD_Path.hxx>
#endif
#ifndef _McCadEXPlug_PluginManagerPtr_HeaderFile
#include <McCadEXPlug_PluginManagerPtr.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfAsciiString.hxx>
#endif
#ifndef _McCadEXPlug_ExchangePluginPtr_HeaderFile
#include <McCadEXPlug_ExchangePluginPtr.hxx>
#endif
#ifndef _McCadAEV_EditorPtr_HeaderFile
#include <McCadAEV_EditorPtr.hxx>
#endif
class OSD_Directory;
class OSD_Path;
class TColStd_HSequenceOfAsciiString;
class TCollection_AsciiString;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

//!   This  class is   the   root  class <br>
//!           application. <br>
class McCadAEV_Application  {

public:

    void* operator new(size_t,void* anAddress)
      {
        return anAddress;
      }
    void* operator new(size_t size)
      {
        return Standard::Allocate(size);
      }
    void  operator delete(void *anAddress)
      {
        if (anAddress) Standard::Free((Standard_Address&)anAddress);
      }
 // Methods PUBLIC
 //


Standard_EXPORT McCadAEV_Application();

//! Deletes t<me>. <br>
Standard_EXPORT virtual  void Destroy() ;
~McCadAEV_Application()
{
  Destroy();
}



Standard_EXPORT virtual  OSD_Directory ResourceDir() const;


Standard_EXPORT virtual  void SetResourceDir(const OSD_Directory& theDir) ;


Standard_EXPORT virtual  void SetPluginPath(const OSD_Path& thePath) ;


Standard_EXPORT virtual  OSD_Path GetPluginPath() const;


Standard_EXPORT virtual  Standard_Boolean LoadPlugins() ;


Standard_EXPORT virtual  Standard_Boolean UnLoadPlugins() ;


Standard_EXPORT virtual  Handle_TColStd_HSequenceOfAsciiString Formats() const;


Standard_EXPORT virtual  McCadEXPlug_ExchangePluginPtr GetPlugin(const TCollection_AsciiString& theExtension) const;


Standard_EXPORT virtual  Handle_TColStd_HSequenceOfAsciiString GetExtensions() const;


Standard_EXPORT virtual  Standard_Boolean CheckExtension(const TCollection_AsciiString& theExtension) const;


Standard_EXPORT virtual  void CloseEditor(const McCadAEV_EditorPtr& theEdPtr) ;


Standard_EXPORT virtual  void OpenEditor(const McCadAEV_EditorPtr& theEdPtr) ;


Standard_EXPORT virtual  void AddEditor(const McCadAEV_EditorPtr& theEdPtr) ;





protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //
OSD_Directory myResourceDir;
OSD_Path myPluginPath;
McCadEXPlug_PluginManagerPtr myPluginManager;


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
