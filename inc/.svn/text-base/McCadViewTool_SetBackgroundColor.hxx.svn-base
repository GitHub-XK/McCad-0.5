// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadViewTool_SetBackgroundColor_HeaderFile
#define _McCadViewTool_SetBackgroundColor_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadViewTool_SetBackgroundColor_HeaderFile
#include <Handle_McCadViewTool_SetBackgroundColor.hxx>
#endif

#ifndef _McCadTool_Task_HeaderFile
#include <McCadTool_Task.hxx>
#endif
#ifndef _Handle_McCadCom_CasDocument_HeaderFile
#include <Handle_McCadCom_CasDocument.hxx>
#endif
#ifndef _Handle_McCadCom_CasView_HeaderFile
#include <Handle_McCadCom_CasView.hxx>
#endif
#ifndef _McCadTool_State_HeaderFile
#include <McCadTool_State.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class McCadCom_CasDocument;
class McCadCom_CasView;
class McCadWin_MouseEvent;
#include <Quantity_Color.hxx>

//! SetBackgroundColor Task class <br>
class McCadViewTool_SetBackgroundColor : public McCadTool_Task {

public:
 // Methods PUBLIC
 // 


Standard_EXPORT McCadViewTool_SetBackgroundColor(const Handle(McCadCom_CasDocument)& theDoc = NULL,const Handle(McCadCom_CasView)& theView = NULL,const McCadTool_State theState = McCadTool_Start,const Standard_Boolean theUndoState = Standard_False,const Standard_Boolean theRedoState = Standard_False);

//! Deletes t<me>. <br>
Standard_EXPORT virtual  void Destroy() ;
~McCadViewTool_SetBackgroundColor()
{
  Destroy();
}



Standard_EXPORT virtual  void Execute() ;


Standard_EXPORT virtual  void UnExecute() ;


Standard_EXPORT virtual  void Suspend() ;


Standard_EXPORT virtual  void Resume() ;


Standard_EXPORT virtual  void MousePressEvent(const McCadWin_MouseEvent& e) ;


Standard_EXPORT virtual  void MouseReleaseEvent(const McCadWin_MouseEvent& e) ;


Standard_EXPORT virtual  void MouseLeaveEvent() ;


Standard_EXPORT virtual  void MouseEnterEvent() ;


Standard_EXPORT virtual  Standard_Boolean IsNull() ;




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
Quantity_Color myPreviousColor;

};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
