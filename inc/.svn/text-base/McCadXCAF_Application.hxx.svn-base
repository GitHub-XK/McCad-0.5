// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadXCAF_Application_HeaderFile
#define _McCadXCAF_Application_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadXCAF_Application_HeaderFile
#include <Handle_McCadXCAF_Application.hxx>
#endif

#ifndef _TDocStd_Application_HeaderFile
#include <TDocStd_Application.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#include <TDF_Label.hxx>
class TColStd_SequenceOfExtendedString;


//DEFINE_STANDARD_HANDLE(McCadXCAF_Application,TDocStd_Application)

//! \brief Implementation of a TDocStd_Application

//! this class allows the use of OCCs Application Framework

class McCadXCAF_Application : public TDocStd_Application {

public:
 // Methods PUBLIC
 //

Standard_EXPORT static const Handle(McCadXCAF_Application)& GetApplication();


Standard_EXPORT virtual  void Formats(TColStd_SequenceOfExtendedString& theFormats);


Standard_EXPORT   Standard_CString ResourcesName();
//Standard_EXPORT ~McCadXCAF_Application();


Standard_EXPORT virtual void InitDocument (const Handle(TDocStd_Document)& theDoc) const;


 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 //
	Standard_EXPORT McCadXCAF_Application();

 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //
//public:
// DEFINE_STANDARD_RTTI(McCadXCAF_Application)


};

//IMPLEMENT_STANDARD_HANDLE(McCadXCAF_Application,TDocStd_Application)
//IMPLEMENT_STANDARD_RTTIEXT(McCadXCAF_Application,TDocStd_Application)



// other Inline functions and methods (like "C++: function call" methods)
//


#endif
