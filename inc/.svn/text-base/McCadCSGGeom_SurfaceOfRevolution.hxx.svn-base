// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by
//                      Matra Datavision SA.  All rights reserved.
//
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
//
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _McCadCSGGeom_SurfaceOfRevolution_HeaderFile
#define _McCadCSGGeom_SurfaceOfRevolution_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_SurfaceOfRevolution_HeaderFile
#include <Handle_McCadCSGGeom_SurfaceOfRevolution.hxx>
#endif

#ifndef _McCadCSGGeom_Surface_HeaderFile
#include <McCadCSGGeom_Surface.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
#ifndef _Handle_Geom_Surface_HeaderFile
#include <Handle_Geom_Surface.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_McCadCSGGeom_Surface_HeaderFile
#include <Handle_McCadCSGGeom_Surface.hxx>
#endif
#include <Geom_Curve.hxx>
class gp_Pnt;
class GeomAdaptor_Surface;
class Geom_Surface;
class McCadCSGGeom_Surface;
#include <Geom_SurfaceOfRevolution.hxx>
#include <TColStd_HSequenceOfReal.hxx>



class McCadCSGGeom_SurfaceOfRevolution : public McCadCSGGeom_Surface {

public:
 // Methods PUBLIC
 //

//! Creates an infinite plane for use in <br>
//!  CSG representation <br>
//! <br>
Standard_EXPORT McCadCSGGeom_SurfaceOfRevolution();


//!  Creates a plane from its cartesian equation : <br>
//!  A * X + B * Y + C * Z + D = 0.0 <br>
Standard_EXPORT McCadCSGGeom_SurfaceOfRevolution(gp_Ax1& revAxis, Handle(Geom_Curve)& basisCurve);


Standard_EXPORT McCadCSGGeom_SurfaceOfRevolution(gp_Ax1& revAxis, Handle(Geom_Curve)& basisCurve, Handle(TColStd_HSequenceOfReal)& realSeq);

//!  Returns the coefficients of the plane's cartesian equation : <br>
//!  A * X + B * Y + C * Z + D = 0. <br>
//Standard_EXPORT   void Coefficients(Standard_Real& A,Standard_Real& B,Standard_Real& C,Standard_Real& D) const;


Standard_EXPORT virtual  void Print(Standard_OStream& theStream) const;

//! Performs Point evaluation <br>
//!  A * X + B * Y + C * Z + D = value. <br>
Standard_EXPORT virtual  Standard_Real Evaluate(const gp_Pnt& thePoint) const;

//!  findes a point on the surface; <br>
Standard_EXPORT virtual  gp_Pnt Value(const Standard_Real U,const Standard_Real V) const;


Standard_EXPORT virtual  void SetCasSurf(const GeomAdaptor_Surface& theSurf) ;

//! returns the Cas surface <br>
Standard_EXPORT virtual  Handle_Geom_Surface CasSurf() const;


Standard_EXPORT virtual  Standard_Boolean IsEqual(const Handle(McCadCSGGeom_Surface)& another) const;


Standard_EXPORT virtual  Standard_Boolean IsGeomEqual(const Handle(McCadCSGGeom_Surface)& another) const;
//Standard_EXPORT ~McCadCSGGeom_SurfaceOfRevolution();

Standard_EXPORT  Handle_Geom_SurfaceOfRevolution SurfaceOfRevolution() const;


Standard_EXPORT  void SetParameter(Handle(TColStd_HSequenceOfReal)& realSeq) ;


Standard_EXPORT  void GetParameter(Handle(TColStd_HSequenceOfReal)& realSeq) const;

 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 //


 // Fields PROTECTED
 //


private:

 // Methods PRIVATE
 //


 // Fields PRIVATE
 //
	gp_Ax1 myRevAxis;
	Handle(Geom_Curve) myBasisCurve;
	Handle(TColStd_HSequenceOfReal) myRealSeq;
	Handle(Geom_Surface) mySurf;
	Standard_Real myR;
	Standard_Real myA;
	Standard_Real myB;
};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
